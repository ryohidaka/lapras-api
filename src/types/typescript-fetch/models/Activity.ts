/* tslint:disable */
/* eslint-disable */
/**
 * LAPRAS Public API
 * LAPRAS公開ページAPIの仕様書
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Activity Log
 * @export
 * @interface Activity
 */
export interface Activity {
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    date: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    readonly type: ActivityTypeEnum;
}


/**
 * @export
 */
export const ActivityTypeEnum = {
    Github: 'github',
    SpeakerDeck: 'speaker_deck',
    Qiita: 'qiita',
    Zenn: 'zenn',
    Note: 'note',
    Teratail: 'teratail',
    Blog: 'blog',
    Connpass: 'connpass'
} as const;
export type ActivityTypeEnum = typeof ActivityTypeEnum[keyof typeof ActivityTypeEnum];


/**
 * Check if a given object implements the Activity interface.
 */
export function instanceOfActivity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function ActivityFromJSON(json: any): Activity {
    return ActivityFromJSONTyped(json, false);
}

export function ActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Activity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'url': json['url'],
        'date': json['date'],
        'type': json['type'],
    };
}

export function ActivityToJSON(value?: Activity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'url': value.url,
        'date': value.date,
    };
}

